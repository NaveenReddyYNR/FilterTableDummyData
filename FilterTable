import React, { useState, useEffect } from 'react';
import { useNavigate, useLocation, useParams, Navigate } from 'react-router-dom';
import {
  IconButton,
  Button,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Paper,
  TablePagination,
  Tooltip,
  TextField,
  Typography,
  Box,
} from '@mui/material';
import InputLabel from '@mui/material/InputLabel';
import MenuItem from '@mui/material/MenuItem';
import FormControl from '@mui/material/FormControl';
import Select from '@mui/material/Select';
import SortIcon from '@mui/icons-material/Sort';
import ChevronRightIcon from '@mui/icons-material/ChevronRight';
import DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';
import EditIcon from '@mui/icons-material/Edit';
import Loader from '../../components/loader/Loader';

const dummyData = [
  {
    PCNumber: 'PC00001',
    PlayerCounterName: 'Virat Kohli',
    PcCode: 'T1-VKC',
    Role: 'Batsman',
    RoleLogo: 'https://www.vecteezy.com/free-vector/cricket-bat',
    Tournament: 'IPL 2023',
    Team: 'RCB',
    TotalSupply: 1000,
    Status: 'Minted',
    SmartContractAddress: '0xd9145C**',
    FormCompletion: '20',
    Game: 'cricket',
  },
  {
    PCNumber: 'PC00002',
    PlayerCounterName: 'MS Dhoni',
    PcCode: 'T1-MDC',
    Role: 'Batsman',
    RoleLogo: 'https://www.vecteezy.com/free-vector/cricket-bat',
    Tournament: 'IPL 2023',
    Team: 'CSK',
    TotalSupply: 1000,
    Status: 'Minted',
    Game: 'cricket',
    SmartContractAddress: '0xd9145C**',
  },
  {
    PCNumber: 'PC00003',
    PlayerCounterName: 'Rohit Sharma',
    PcCode: 'T1-RSC',
    Role: 'Batsman',
    RoleLogo: 'https://www.vecteezy.com/free-vector/cricket-bat',
    Tournament: 'IPL 2023',
    Team: 'MI',
    TotalSupply: 1000,
    Status: 'Minted',
    Game: 'cricket',
    SmartContractAddress: '0xd9145C**',
  },
  {
    PCNumber: 'PC00004',
    PlayerCounterName: 'Ravindra Jadeja',
    PcCode: 'T1-RJC',
    Role: 'AllRounder',
    RoleLogo: 'https://www.vectorstock.com/royalty-free-vector/cricket-bat-and-ball-vector-1645967',
    Tournament: 'IPL 2023',
    Team: 'CSK',
    TotalSupply: 1000,
    Status: 'Minted',
    Game: 'cricket',
    SmartContractAddress: '0xd9145C**',
  },
  {
    PCNumber: 'PC00005',
    PlayerCounterName: 'Shivam Dube',
    PcCode: 'T1-SDC',
    RoleLogo: 'https://www.vectorstock.com/royalty-free-vector/cricket-bat-and-ball-vector-1645967',
    Role: 'AllRounder',
    Tournament: 'IPL 2023',
    Team: 'CSK',
    TotalSupply: 1000,
    Status: 'Minted',
    Game: 'cricket',
    SmartContractAddress: '0xd9145C**',
  },
  {
    PCNumber: 'PC00006',
    PlayerCounterName: 'Kuldeep Yadav',
    PcCode: 'T1-KYC',
    Role: 'Bowler',
    RoleLogo: 'https://www.vecteezy.com/free-vector/cricket-ball',
    Tournament: 'IPL 2023',
    Team: 'CSK',
    TotalSupply: 1000,
    Status: 'Minted',
    Game: 'football',
    SmartContractAddress: '0xd9145C**',
  },
  {
    PCNumber: 'PC00007',
    PlayerCounterName: 'Hardik Pandya',
    PcCode: 'T1-HPC',
    Game: 'cricket',
    Status: 'WIP',
  },
  {
    PCNumber: 'PC00008',
    PlayerCounterName: 'KL Rahul',
    PcCode: 'T1-KRC',
    Game: 'football',
    Status: 'WIP',
  },
];
export default function PlayerCounter() {

  const navigate = useNavigate();
  const [page, setPage] = useState(0);
  const [newData, setNewData] = useState(dummyData);
  const [rowsPerPage, setRowsPerPage] = useState(5);
  const [isLoading, setLoading] = useState(false);
  const [game, setGame] = useState('');
  const [year, setYear] = useState('');
  const [team, setTeam] = useState('');
  const [order, setOrder] = useState('ASC');

  const handleGame = (event) => {
    setGame(() => event.target.value);
  };
  const handleTeam = (event) => {
    setTeam(() => event.target.value);
  };
  const handleYear = (event) => {
    setYear(event.target.value);
  };
  const handleChangePage = (event, newPage) => {
    setPage(newPage);
  };

  const handleChangeRowsPerPage = (event) => {
    setRowsPerPage(+event.target.value);
    setPage(0);
  };

  const cardNumber = (para) => {
    let newString = '';
    if (para) {
      for (let i = 0; i < para.length; i += 1) {
        if (i < 6) {
          newString += para[i];
        } else {
          newString += '*';
        }
      }
      return newString;
    }
  };

  const handleCreatePlayer = () => {
    navigate(`/dashboard/player-counter/player-counter-creation`);
  };

  const sorting = (col) => {
    if (order === 'ASC') {
      const sorted = [...newData].sort((a, b) => (a[col].toLowerCase() > b[col].toLowerCase() ? 1 : -1));

      setNewData(sorted);
      setOrder('DSC');
    }
    if (order === 'DSC') {
      const sorted = [...newData].sort((a, b) => (a[col].toLowerCase() < b[col].toLowerCase() ? 1 : -1));

      setNewData(sorted);
      setOrder('ASC');
    }
  };

  return (
    <>
      {isLoading ? (
        <Loader />
      ) : (
        <Paper elevation={5}>
          <div style={{ display: 'flex', alignItems: 'center', textAlign: 'center', justifyContent: 'space-between' }}>
            <span style={{ display: 'flex' }}>
              <ChevronRightIcon /> Player Counter
            </span>
            <Typography align="right" style={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>
              <SortIcon style={{ marginTop: '3%' }} />
              <FormControl variant="standard" sx={{ m: 1, minWidth: 120 }}>
                <InputLabel id="demo-simple-select-standard-label">Tournament</InputLabel>
                <Select value={game} onChange={handleGame} label="Game">
                  <MenuItem value="">
                    <em>None</em>
                  </MenuItem>
                  <MenuItem value="cricket">Cricket</MenuItem>
                  <MenuItem value="football">Football</MenuItem>
                </Select>
              </FormControl>
              <FormControl variant="standard" sx={{ m: 1, minWidth: 120 }}>
                <InputLabel id="demo-simple-select-standard-label">Team</InputLabel>
                <Select value={team} onChange={handleTeam} label="Team">
                  <MenuItem value="">
                    <em>None</em>
                  </MenuItem>
                  <MenuItem value="CSK">CSK</MenuItem>
                  <MenuItem value="RCB">RCB</MenuItem>
                  <MenuItem value="RJA">RJA</MenuItem>
                </Select>
              </FormControl>

              {/* <FormControl variant="standard" sx={{ m: 1, minWidth: 120 }}>
              <InputLabel id="demo-simple-select-standard-label">Year</InputLabel>
              <Select value={year} onChange={handleYear} label="Year">
                <MenuItem value="">
                  <em>None</em>
                </MenuItem>
                <MenuItem value={2022}>2022</MenuItem>
                <MenuItem value={2021}>2021</MenuItem>
              </Select>
            </FormControl> */}

              <Button variant="contained" color="primary" onClick={handleCreatePlayer} style={{ width: '100%' }}>
                Create New Player counter
              </Button>
            </Typography>
          </div>
          <TableContainer>
            <Table stickyHeader aria-label="simple table">
              <TableHead>
                <TableRow>
                  <TableCell align="center" onClick={() => sorting('PCNumber')}>
                    PC Number
                  </TableCell>
                  <TableCell align="center" onClick={() => sorting('PlayerCounterName')}>
                    Player Counter Name
                  </TableCell>
                  <TableCell align="center" onClick={() => sorting('PcCode')}>
                    PC Code
                  </TableCell>
                  <TableCell align="center" onClick={() => sorting('Role')}>
                    Role
                  </TableCell>
                  <TableCell align="center" onClick={() => sorting('Tournament')}>
                    Tournament
                  </TableCell>
                  <TableCell align="center" onClick={() => sorting('Team')}>
                    Team
                  </TableCell>
                  <TableCell align="center" onClick={() => sorting('TotalSupply')}>
                    Total Supply
                  </TableCell>
                  <TableCell align="center" onClick={() => sorting('Status')}>
                    Status
                  </TableCell>
                  <TableCell align="center" onClick={() => sorting('Game')}>
                    Smart Contract Address
                  </TableCell>
                  <TableCell align="center" onClick={() => sorting('PCNumber')}>
                    {' '}
                    Action{' '}
                  </TableCell>
                </TableRow>
              </TableHead>
              {!newData || newData.length === 0 ? (
                <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>
              ) : (
                <TableBody>
                  {newData
                    .filter((player) => {
                      if (game && team) {
                        return player?.Game?.includes(game) && player?.Team?.includes(team);
                      }
                      if (game) {
                        return player?.Game?.includes(game);
                      }
                      if (team) {
                        return player?.Team?.includes(team);
                      }
                      return player;
                    })
                    .map((row) => (
                      <TableRow key={row?.PCNumber}>
                        <TableCell align="center">{row?.PCNumber}</TableCell>
                        <TableCell align="center">{row?.PlayerCounterName}</TableCell>
                        <TableCell align="center">{row?.PcCode}</TableCell>
                        <TableCell align="center" style={{ display: 'flex' }}>
                          {row?.Role}
                        </TableCell>
                        <TableCell align="center">{row?.Tournament}</TableCell>
                        <TableCell align="center">{row?.Team}</TableCell>
                        <TableCell align="center">{row?.TotalSupply}</TableCell>
                        <TableCell align="center">{row?.Status}</TableCell>
                        <TableCell align="center">{cardNumber(row?.SmartContractAddress)}</TableCell>

                        {row?.Status === 'WIP' ? (
                          <TableCell align="right" style={{ display: 'flex' }}>
                            <Tooltip title="Delete">
                              <IconButton style={{ cursor: 'pointer' }} onClick={() => console.log('Updated')}>
                                <DeleteOutlineIcon color="error" fontSize="small" style={{ cursor: 'pointer' }} />
                              </IconButton>
                            </Tooltip>
                            <Tooltip title="Edit">
                              <IconButton style={{ cursor: 'pointer' }} onClick={() => console.log('Updated')}>
                                <EditIcon color="primary" fontSize="small" style={{ cursor: 'pointer' }} />
                              </IconButton>
                            </Tooltip>
                          </TableCell>
                        ) : (
                          <></>
                        )}
                      </TableRow>
                    ))}
                </TableBody>
              )}
            </Table>
          </TableContainer>
          <TablePagination
            rowsPerPageOptions={[5, 10, 100, 150]}
            component="div"
            count={newData?.length || 0}
            rowsPerPage={rowsPerPage}
            page={Number(page)}
            onPageChange={handleChangePage}
            onRowsPerPageChange={handleChangeRowsPerPage}
            sx={{
              '.MuiTablePagination-displayedRows': {
                marginBottom: 0,
              },
              '.MuiTablePagination-selectLabel': {
                marginBottom: 0,
              },
            }}
          />
        </Paper>
      )}
    </>
  );
}
